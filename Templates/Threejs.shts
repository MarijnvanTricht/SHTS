<html lang="en">
<!-- SHTS Three.js template created by Marijn van Tricht -->
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
	<style>
        body {
			overflow: hidden;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
    </style>
</head>
<body>
<script>
	// insert Three.js script
</script>
<script>
	function loadData() {
		console.log("loadData");
		// Load serialized data from the script tag within the HTML content
		const existingScriptTag = document.querySelector('script[type="text/json"]');

		if (existingScriptTag) {
			return JSON.parse(existingScriptTag.textContent);
		} else {
			console.log("Serialized data not found.");
		}
		return [];
	}

	function saveData(data) {
		const serializedData = JSON.stringify(data);
		// Store serialized data in a script tag within the HTML content
		let scriptTag = document.querySelector('script[type="text/json"]');
		// Replace script tag if this exists
		if (scriptTag) {
			console.log("adding to scriptTag");
			scriptTag.textContent = serializedData;
		} else {
			console.log("creating new scriptTag");
			scriptTag = document.createElement('script');
			scriptTag.type = 'text/json';
			scriptTag.textContent = serializedData;
			document.body.appendChild(scriptTag);
		}
	}

	// Save content to file to update the current state of the application
	function saveContentToFile() {
		var content = document.documentElement.outerHTML;

		// Use DOMParser to safely parse the HTML content as a document
		var parser = new DOMParser();
		var doc = parser.parseFromString(content, 'text/html');

		// Find the <canvas> element in the parsed document
		var mainElement = doc.querySelector('canvas');

		// Remove the <canvas> element if it exists
		if (mainElement) {
			mainElement.parentNode.removeChild(mainElement);
		}

		// Serialize the updated document back to a string
		var updatedContent = doc.documentElement.outerHTML;
		
		// Save the updated content
        SHTS.save(updatedContent);
    }
	
	//loadData();
	
	window.addEventListener('beforeunload', function (event) {
		//saveData([]);
		saveContentToFile();
	});
</script>
</body></html>